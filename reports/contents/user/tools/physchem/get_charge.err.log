Traceback (most recent call last):
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/docs/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/docs/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
charge_residues = msm.physchem.get_charge(molecular_system, element='group', definition='OpenMM')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[6], line 1[0m
[0;32m----> 1[0m charge_residues [38;5;241m=[39m [43mmsm[49m[38;5;241;43m.[39;49m[43mphyschem[49m[38;5;241;43m.[39;49m[43mget_charge[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[43melement[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mgroup[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mdefinition[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mOpenMM[39;49m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/_private/digestion/digest.py:122[0m, in [0;36mdigest.<locals>.digestor.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    120[0m     [38;5;28;01mreturn[39;00m func(all_args[[38;5;124m'[39m[38;5;124mself[39m[38;5;124m'[39m], [38;5;241m*[39m[38;5;241m*[39mfinal_args)
[1;32m    121[0m [38;5;28;01melse[39;00m:
[0;32m--> 122[0m     [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mfinal_args[49m[43m)[49m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/physchem/get_charge.py:59[0m, in [0;36mget_charge[0;34m(molecular_system, element, selection, definition, engine, syntax, skip_digestion)[0m
[1;32m     55[0m [38;5;28;01mif[39;00m engine [38;5;241m==[39m [38;5;124m'[39m[38;5;124mOpenMM[39m[38;5;124m'[39m:
[1;32m     57[0m     [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mopenmm[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m NonbondedForce
[0;32m---> 59[0m     openmm_system [38;5;241m=[39m [43mconvert[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[43mto_form[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mopenmm.System[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     61[0m     output [38;5;241m=[39m []
[1;32m     63[0m     [38;5;28;01mif[39;00m element[38;5;241m==[39m[38;5;124m'[39m[38;5;124matom[39m[38;5;124m'[39m:

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/_private/digestion/digest.py:122[0m, in [0;36mdigest.<locals>.digestor.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    120[0m     [38;5;28;01mreturn[39;00m func(all_args[[38;5;124m'[39m[38;5;124mself[39m[38;5;124m'[39m], [38;5;241m*[39m[38;5;241m*[39mfinal_args)
[1;32m    121[0m [38;5;28;01melse[39;00m:
[0;32m--> 122[0m     [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mfinal_args[49m[43m)[49m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/basic/convert.py:530[0m, in [0;36mconvert[0;34m(molecular_system, to_form, selection, structure_indices, syntax, verbose, skip_digestion, **kwargs)[0m
[1;32m    528[0m [38;5;66;03m# If one to one[39;00m
[1;32m    529[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(from_form, ([38;5;28mlist[39m, [38;5;28mtuple[39m)):
[0;32m--> 530[0m     output [38;5;241m=[39m [43m_convert_one_to_one[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[43mfrom_form[49m[43m,[49m[43m [49m[43mto_form[49m[38;5;241;43m=[39;49m[43mto_form[49m[43m,[49m[43m [49m[43mselection[49m[38;5;241;43m=[39;49m[43mselection[49m[43m,[49m[43m [49m[43mstructure_indices[49m[38;5;241;43m=[39;49m[43mstructure_indices[49m[43m,[49m
[1;32m    531[0m [43m            [49m[43msyntax[49m[38;5;241;43m=[39;49m[43msyntax[49m[43m,[49m[43m [49m[43mverbose[49m[38;5;241;43m=[39;49m[43mverbose[49m[43m,[49m[43m [49m[43mskip_digestion[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    533[0m [38;5;66;03m# If multiple to one[39;00m
[1;32m    534[0m 
[1;32m    535[0m [38;5;28;01melse[39;00m:
[1;32m    536[0m 
[1;32m    537[0m     [38;5;66;03m# conversions in private shortcuts[39;00m
[1;32m    538[0m     [38;5;28;01mif[39;00m [38;5;28mtuple[39m([38;5;28msorted[39m(from_form)) [38;5;129;01min[39;00m _multiple_conversion_shortcuts:

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/basic/convert.py:87[0m, in [0;36m_convert_one_to_one[0;34m(molecular_system, from_form, to_form, selection, structure_indices, syntax, verbose, **kwargs)[0m
[1;32m     84[0m         [38;5;28;01mif[39;00m [38;5;28mlen[39m(missing_arguments)[38;5;241m>[39m[38;5;241m0[39m:
[1;32m     85[0m             [38;5;28;01mraise[39;00m NotCompatibleConversionError(from_form, to_form, missing_arguments)
[0;32m---> 87[0m     output [38;5;241m=[39m [43mfunction[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mconversion_arguments[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     89[0m [38;5;28;01melif[39;00m ([38;5;124m'[39m[38;5;124mmolsysmt.MolSys[39m[38;5;124m'[39m [38;5;129;01min[39;00m _dict_modules[from_form][38;5;241m.[39m_convert_to) [38;5;129;01mand[39;00m (to_form [38;5;129;01min[39;00m _dict_modules[[38;5;124m'[39m[38;5;124mmolsysmt.MolSys[39m[38;5;124m'[39m][38;5;241m.[39m_convert_to):
[1;32m     91[0m     output [38;5;241m=[39m _convert_one_to_one(molecular_system, from_form, to_form[38;5;241m=[39m[38;5;124m'[39m[38;5;124mmolsysmt.MolSys[39m[38;5;124m'[39m, selection[38;5;241m=[39mselection,
[1;32m     92[0m             structure_indices[38;5;241m=[39mstructure_indices, syntax[38;5;241m=[39msyntax, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/_private/digestion/digest.py:52[0m, in [0;36mdigest.<locals>.digestor.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m     48[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m     49[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     51[0m     [38;5;28;01mif[39;00m kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mskip_digestion[39m[38;5;124m'[39m, [38;5;28;01mFalse[39;00m):
[0;32m---> 52[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     54[0m     [38;5;66;03m# Define caller[39;00m
[1;32m     56[0m     caller [38;5;241m=[39m func[38;5;241m.[39m[38;5;18m__module__[39m[38;5;241m+[39m[38;5;124m'[39m[38;5;124m.[39m[38;5;124m'[39m[38;5;241m+[39mfunc[38;5;241m.[39m[38;5;18m__name__[39m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/form/molsysmt_MolSys/to_openmm_System.py:14[0m, in [0;36mto_openmm_System[0;34m(item, atom_indices, structure_indices, forcefield, water_model, implicit_solvent, non_bonded_method, constraints, switch_distance, dispersion_correction, ewald_error_tolerance, skip_digestion)[0m
[1;32m     10[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01m.[39;00m[38;5;21;01m.[39;00m[38;5;21;01mopenmm_Topology[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m to_openmm_System [38;5;28;01mas[39;00m openmm_Topology_to_openmm_System
[1;32m     12[0m tmp_item [38;5;241m=[39m to_openmm_Topology(item, atom_indices[38;5;241m=[39matom_indices, structure_indices[38;5;241m=[39mstructure_indices, skip_digestion[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m---> 14[0m tmp_item [38;5;241m=[39m [43mopenmm_Topology_to_openmm_System[49m[43m([49m[43mtmp_item[49m[43m,[49m[43m [49m[43mforcefield[49m[38;5;241;43m=[39;49m[43mforcefield[49m[43m,[49m
[1;32m     15[0m [43m        [49m[43mwater_model[49m[38;5;241;43m=[39;49m[43mwater_model[49m[43m,[49m[43m [49m[43mimplicit_solvent[49m[38;5;241;43m=[39;49m[43mimplicit_solvent[49m[43m,[49m
[1;32m     16[0m [43m        [49m[43mnon_bonded_method[49m[38;5;241;43m=[39;49m[43mnon_bonded_method[49m[43m,[49m[43m [49m[43mconstraints[49m[38;5;241;43m=[39;49m[43mconstraints[49m[43m,[49m
[1;32m     17[0m [43m        [49m[43mswitch_distance[49m[38;5;241;43m=[39;49m[43mswitch_distance[49m[43m,[49m[43m [49m[43mdispersion_correction[49m[38;5;241;43m=[39;49m[43mdispersion_correction[49m[43m,[49m
[1;32m     18[0m [43m        [49m[43mewald_error_tolerance[49m[38;5;241;43m=[39;49m[43mewald_error_tolerance[49m[43m,[49m[43m [49m[43mskip_digestion[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m     20[0m [38;5;28;01mreturn[39;00m tmp_item

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/_private/digestion/digest.py:52[0m, in [0;36mdigest.<locals>.digestor.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m     48[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m     49[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     51[0m     [38;5;28;01mif[39;00m kwargs[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mskip_digestion[39m[38;5;124m'[39m, [38;5;28;01mFalse[39;00m):
[0;32m---> 52[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     54[0m     [38;5;66;03m# Define caller[39;00m
[1;32m     56[0m     caller [38;5;241m=[39m func[38;5;241m.[39m[38;5;18m__module__[39m[38;5;241m+[39m[38;5;124m'[39m[38;5;124m.[39m[38;5;124m'[39m[38;5;241m+[39mfunc[38;5;241m.[39m[38;5;18m__name__[39m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/molsysmt/form/openmm_Topology/to_openmm_System.py:23[0m, in [0;36mto_openmm_System[0;34m(item, atom_indices, forcefield, water_model, implicit_solvent, non_bonded_method, constraints, switch_distance, dispersion_correction, ewald_error_tolerance, skip_digestion)[0m
[1;32m     20[0m [38;5;28;01mif[39;00m constraints[38;5;241m==[39m[38;5;124m'[39m[38;5;124mhbonds[39m[38;5;124m'[39m:
[1;32m     21[0m     contraints[38;5;241m=[39mapp[38;5;241m.[39mHBonds
[0;32m---> 23[0m system [38;5;241m=[39m [43mforcefield[49m[38;5;241;43m.[39;49m[43mcreateSystem[49m[43m([49m[43mitem[49m[43m,[49m[43m [49m[43mnonbondedMethod[49m[38;5;241;43m=[39;49m[43mnon_bonded_method[49m[43m,[49m[43m [49m[43mconstraints[49m[38;5;241;43m=[39;49m[43mapp[49m[38;5;241;43m.[39;49m[43mHBonds[49m[43m)[49m
[1;32m     25[0m [38;5;28;01mif[39;00m dispersion_correction [38;5;129;01mor[39;00m ewald_error_tolerance:
[1;32m     26[0m     forces [38;5;241m=[39m {ii[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m : ii [38;5;28;01mfor[39;00m ii [38;5;129;01min[39;00m system[38;5;241m.[39mgetForces()}

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/openmm/app/forcefield.py:1257[0m, in [0;36mForceField.createSystem[0;34m(self, topology, nonbondedMethod, nonbondedCutoff, constraints, rigidWater, removeCMMotion, hydrogenMass, residueTemplates, ignoreExternalBonds, switchDistance, flexibleConstraints, drudeMass, **args)[0m
[1;32m   1253[0m rigidResidue [38;5;241m=[39m [[38;5;28;01mFalse[39;00m][38;5;241m*[39mtopology[38;5;241m.[39mgetNumResidues()
[1;32m   1255[0m [38;5;66;03m# Find the template matching each residue and assign atom types.[39;00m
[0;32m-> 1257[0m templateForResidue [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_matchAllResiduesToTemplates[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mtopology[49m[43m,[49m[43m [49m[43mresidueTemplates[49m[43m,[49m[43m [49m[43mignoreExternalBonds[49m[43m)[49m
[1;32m   1258[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m topology[38;5;241m.[39mresidues():
[1;32m   1259[0m     [38;5;28;01mif[39;00m res[38;5;241m.[39mname [38;5;241m==[39m [38;5;124m'[39m[38;5;124mHOH[39m[38;5;124m'[39m:
[1;32m   1260[0m         [38;5;66;03m# Determine whether this should be a rigid water.[39;00m

File [0;32m~/micromamba/envs/docs/lib/python3.12/site-packages/openmm/app/forcefield.py:1472[0m, in [0;36mForceField._matchAllResiduesToTemplates[0;34m(self, data, topology, residueTemplates, ignoreExternalBonds, ignoreExtraParticles, recordParameters)[0m
[1;32m   1470[0m                 [38;5;28;01mbreak[39;00m
[1;32m   1471[0m [38;5;28;01mif[39;00m matches [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1472[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mNo template found for residue [39m[38;5;132;01m%d[39;00m[38;5;124m ([39m[38;5;132;01m%s[39;00m[38;5;124m).  [39m[38;5;132;01m%s[39;00m[38;5;124m  For more information, see https://github.com/openmm/openmm/wiki/Frequently-Asked-Questions#template[39m[38;5;124m'[39m [38;5;241m%[39m (res[38;5;241m.[39mindex[38;5;241m+[39m[38;5;241m1[39m, res[38;5;241m.[39mname, _findMatchErrors([38;5;28mself[39m, res)))
[1;32m   1473[0m [38;5;28;01melse[39;00m:
[1;32m   1474[0m     [38;5;28;01mif[39;00m recordParameters:

[0;31mValueError[0m: No template found for residue 1 (MET).  The set of atoms is similar to MET, but it is missing 9 hydrogen atoms.  For more information, see https://github.com/openmm/openmm/wiki/Frequently-Asked-Questions#template

