{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3b22d893-0ae8-49d3-b00a-c52833e84e98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9c8bafc18d53412fa0346bbd4cbb2569",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm\n",
    "from molsysmt import pyunitwizard as puw\n",
    "import numpy as np\n",
    "\n",
    "import openmm as mm\n",
    "from openmm import app\n",
    "from openmm import unit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "22b111e7-eded-4cab-a0be-eefa57719644",
   "metadata": {},
   "outputs": [],
   "source": [
    "#import os\n",
    "#from sys import stdout\n",
    "#from mdtraj.reporters import HDF5Reporter\n",
    "#from pathlib import Path\n",
    "#import shutil"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f9bd614b-0ce6-4933-9513-526bcef747e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "modeller = msm.convert(msm.systems['Trp-Cage']['1l2y.h5msm'], to_form='openmm.Modeller', structure_indices=0)\n",
    "forcefield = app.ForceField(\"amber14-all.xml\", \"amber14/tip3p.xml\")\n",
    "system = forcefield.createSystem(modeller.topology, nonbondedMethod=app.NoCutoff, constraints=app.HBonds)\n",
    "integrator = mm.LangevinIntegrator(300*unit.kelvin, 1.0/unit.picosecond, 2.0*unit.femtoseconds)\n",
    "platform = mm.Platform.getPlatformByName('CPU')\n",
    "simulation = app.Simulation(modeller.topology, system, integrator, platform)\n",
    "simulation.context.setPositions(modeller.positions)\n",
    "simulation.minimizeEnergy()\n",
    "simulation.context.setVelocitiesToTemperature(300*unit.kelvin)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "52ab45e1-a792-477d-913e-48b83a1cf391",
   "metadata": {},
   "outputs": [],
   "source": [
    "tqdm_reporter = msm.thirds.openmm.reporters.TrajectoryDictReporter(100, time=True, coordinates=True, velocities=True,\n",
    "             potentialEnergy=True, kineticEnergy=True, totalEnergy=True, temperature=True, box=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bff1c777-5dc0-4e37-843f-44b92d7f4bfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "simulation.reporters.append(tqdm_reporter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "eed90624-925e-4f35-8f86-d0250f953315",
   "metadata": {},
   "outputs": [],
   "source": [
    "simulation.step(1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fb7b465b-a250-45c1-be53-2809bb281976",
   "metadata": {},
   "outputs": [],
   "source": [
    "traj_dict=tqdm_reporter.finalize()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "43fcb116-6308-4b06-9bba-7bb068b7c827",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'time': Quantity(value=array([0. , 0.2, 0.4, 0.6, 0.8, 1. , 1.2, 1.4, 1.6, 1.8, 2. ]), unit=picosecond),\n",
       " 'coordinates': Quantity(value=array([[[-0.71445914,  0.74284386,  0.08546972],\n",
       "         [-0.8062712 ,  0.65653841,  0.00868002],\n",
       "         [-0.73972558,  0.52767144, -0.03823852],\n",
       "         ...,\n",
       "         [-0.32141587,  0.96516745, -0.02371781],\n",
       "         [-0.37499656,  0.9648707 ,  0.14515561],\n",
       "         [-0.14580761,  0.94966534,  0.19919869]],\n",
       " \n",
       "        [[-0.71515848,  0.75216351,  0.05497054],\n",
       "         [-0.80690126,  0.65648118, -0.011961  ],\n",
       "         [-0.73213363,  0.53027523, -0.05595221],\n",
       "         ...,\n",
       "         [-0.30422751,  0.95449861, -0.08047135],\n",
       "         [-0.36008136,  0.99388824,  0.08198966],\n",
       "         [-0.14165288,  0.99148416,  0.15140049]],\n",
       " \n",
       "        [[-0.68932828,  0.75274246,  0.04134759],\n",
       "         [-0.77445307,  0.64825085, -0.03429436],\n",
       "         [-0.69326583,  0.52843784, -0.08492063],\n",
       "         ...,\n",
       "         [-0.24931512,  0.98252323, -0.08112137],\n",
       "         [-0.33547563,  1.01462786,  0.07717099],\n",
       "         [-0.12859535,  0.99168412,  0.17936553]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[-0.64473965,  0.84952754,  0.01400237],\n",
       "         [-0.7196276 ,  0.81378159, -0.1005887 ],\n",
       "         [-0.73158535,  0.66270587, -0.13750715],\n",
       "         ...,\n",
       "         [-0.19074497,  0.94856243,  0.10279528],\n",
       "         [-0.30433486,  0.90280766,  0.22525998],\n",
       "         [-0.04516849,  0.78154419,  0.23269339]],\n",
       " \n",
       "        [[-0.63246365,  0.84105892,  0.00174517],\n",
       "         [-0.70289726,  0.81292182, -0.12838548],\n",
       "         [-0.72294143,  0.66468944, -0.15752054],\n",
       "         ...,\n",
       "         [-0.23861503,  0.87295741,  0.16767508],\n",
       "         [-0.28662737,  0.77137125,  0.293473  ],\n",
       "         [-0.04787277,  0.68527286,  0.28138736]],\n",
       " \n",
       "        [[-0.64194049,  0.86299368,  0.00384808],\n",
       "         [-0.67977803,  0.82760568, -0.13488787],\n",
       "         [-0.70894181,  0.68268085, -0.1489712 ],\n",
       "         ...,\n",
       "         [-0.24706538,  0.85460323,  0.17391987],\n",
       "         [-0.28866956,  0.73658135,  0.30078277],\n",
       "         [-0.04644188,  0.68132458,  0.2141842 ]]]), unit=nanometer),\n",
       " 'velocities': Quantity(value=array([[[-3.55805956e-02,  9.08000967e-01, -7.05747020e-01],\n",
       "         [-6.79786272e-01, -5.58482178e-01,  7.22122873e-01],\n",
       "         [ 1.39892149e+00, -7.24382216e-02,  2.91880368e-01],\n",
       "         ...,\n",
       "         [ 5.09362139e-01,  5.81414083e-01, -2.15226199e-01],\n",
       "         [-4.73941249e-01, -2.31719407e-01, -4.06535092e-01],\n",
       "         [-1.92634972e+00, -1.28273733e+00, -4.29268318e-01]],\n",
       " \n",
       "        [[ 8.85341736e-02,  2.23561446e-01, -2.29196195e-01],\n",
       "         [ 3.82787075e-02, -4.98103200e-01,  7.37213891e-01],\n",
       "         [ 5.59137805e-01,  2.16609651e-01,  2.84734393e-01],\n",
       "         ...,\n",
       "         [-9.31852672e-01,  5.74387906e-02,  3.23031551e-01],\n",
       "         [-3.88000274e-01, -4.02980432e-01, -2.26186745e-01],\n",
       "         [-4.84484894e-01,  5.64879308e-01, -4.27183925e-02]],\n",
       " \n",
       "        [[ 4.34304888e-01,  3.30722520e-01, -2.96310091e-01],\n",
       "         [ 5.63249467e-01, -4.97140017e-01, -1.71391719e-04],\n",
       "         [ 2.92235077e-01, -2.92040948e-01, -2.15717594e-01],\n",
       "         ...,\n",
       "         [-1.28625703e+00,  2.46496278e+00,  1.11901849e-01],\n",
       "         [ 1.47983878e-01, -1.81296396e-01,  3.26384444e-01],\n",
       "         [-4.56922052e-01, -1.09698300e+00, -7.30120319e-02]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 2.19968704e-01, -8.53573215e-02, -3.78581870e-02],\n",
       "         [-3.83143421e-01,  3.70261688e-01,  2.64384845e-01],\n",
       "         [-2.20565780e-02,  3.94535415e-01,  2.04735919e-01],\n",
       "         ...,\n",
       "         [ 3.94289847e-01, -3.24697231e-01,  4.05266362e-01],\n",
       "         [ 1.57370024e-01,  6.65508047e-01,  5.59741745e-01],\n",
       "         [-2.15705699e+00, -2.55422678e+00, -2.76557620e-01]],\n",
       " \n",
       "        [[-3.62097854e-02, -5.86129417e-02,  6.87992986e-01],\n",
       "         [-2.20828753e-01, -2.89031221e-01, -1.77796753e-01],\n",
       "         [-4.30474520e-02, -4.52011719e-01, -1.10194573e-01],\n",
       "         ...,\n",
       "         [ 4.56061823e-01,  8.77537048e-01,  1.18012615e+00],\n",
       "         [-3.01901682e+00,  8.20275967e-01, -2.80272127e+00],\n",
       "         [ 1.30973646e+00, -1.21415589e-01, -2.96921816e-01]],\n",
       " \n",
       "        [[-3.90925757e-01,  2.67717960e-01,  8.95691834e-01],\n",
       "         [-2.27599241e-02, -7.73916893e-03, -4.86667300e-01],\n",
       "         [-8.33236054e-02, -1.05076381e+00,  5.19260209e-01],\n",
       "         ...,\n",
       "         [-4.29053142e+00, -5.22282105e-01,  1.17894795e+00],\n",
       "         [ 1.16741882e+00, -7.04493664e-01,  1.49809755e+00],\n",
       "         [ 1.66471229e+00,  5.21500510e-01,  2.65842101e-01]]]), unit=nanometer/picosecond),\n",
       " 'potential_energy': Quantity(value=array([-2131.99116145, -1573.04030426, -1472.94876813, -1422.29627157,\n",
       "        -1349.22122974, -1341.17306888, -1336.11217245, -1330.09260215,\n",
       "        -1265.66484487, -1220.94254657, -1278.60652463]), unit=kilojoule/mole),\n",
       " 'kinetic_energy': Quantity(value=array([912.27750152, 575.94183742, 690.87842748, 715.88012857,\n",
       "        730.98413077, 820.44529942, 820.19368568, 836.8124225 ,\n",
       "        885.3460022 , 847.33976021, 933.61592516]), unit=kilojoule/mole),\n",
       " 'total_energy': Quantity(value=array([-1219.71365993,  -997.09846684,  -782.07034065,  -706.41614299,\n",
       "         -618.23709896,  -520.72776946,  -515.91848677,  -493.28017965,\n",
       "         -380.31884267,  -373.60278636,  -344.99059948]), unit=kilojoule/mole),\n",
       " 'temperature': Quantity(value=array([289.12190661, 182.5293311 , 218.95540322, 226.87902238,\n",
       "        231.66583111, 260.01815111, 259.93840888, 265.20527216,\n",
       "        280.58668962, 268.54162973, 295.88454815]), unit=kelvin),\n",
       " 'box': Quantity(value=array([[[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]],\n",
       " \n",
       "        [[2., 0., 0.],\n",
       "         [0., 2., 0.],\n",
       "         [0., 0., 2.]]]), unit=nanometer)}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traj_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "88d28659-93a5-46cf-8751-faf99cdbefd9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
