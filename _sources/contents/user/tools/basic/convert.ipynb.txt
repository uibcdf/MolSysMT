{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# This cell is removed with the tag: \"remove-input\"\n",
    "# As such, it will not be shown in documentation\n",
    "\n",
    "#import warnings\n",
    "#warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(Tutorial_Convert)=\n",
    "# Convert\n",
    "\n",
    "*Converting a molecular system into other form*\n",
    "\n",
    "In the context of MolSysMT, a molecular system can have different 'forms'. There by, there should be a function in this library to convert a system from a form into other form. This function is {func}`molsysmt.basic.convert`. \n",
    "\n",
    ":::{hint}\n",
    "Visit the section [User guide > Introduction > Molecular System > Forms](../../intro/molecular_systems/forms.md) in case you are not familiar with the concept of \"form\" in MolSysMT.\n",
    ":::\n",
    "\n",
    "## How this function works\n",
    "\n",
    "\n",
    "```{admonition} API documentation\n",
    "Follow this link for a detailed description of the input arguments, raised errors, and returned objects of this function:{func}`molsysmt.basic.convert`.\n",
    "```\n",
    "\n",
    "To have a first approach to {func}`molsysmt.basic.convert`, the following example illustrates how the function operates in a simple context: the conversion of a molecular system from its form to a different form."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "461e68f947ba4c13847571f4821dc150",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system_A = '181L'\n",
    "molecular_system_B = msm.convert(molecular_system_A, to_form='181L.h5msm')\n",
    "molecular_system_C = msm.convert(molecular_system_B)\n",
    "molecular_system_D = msm.convert(molecular_system_C, to_form='string:pdb_text')\n",
    "molecular_system_E = msm.convert(molecular_system_D, to_form='mdtraj.Trajectory')\n",
    "molecular_system_F = msm.convert(molecular_system_E, to_form='nglview.NGLWidget')\n",
    "molecular_system_G = msm.convert(molecular_system_F, to_form='openmm.Topology')\n",
    "molecular_system_H = msm.convert(molecular_system_G, to_form='string:amino_acids_3')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ":::{tip}\n",
    "All methods defined in the {ref}`molsysmt.basic <API basic>` module can be invoked also from the main level of the library. Hence, {func}`molsysmt.convert` is the same method as {func}`molsysmt.basic.convert`.\n",
    ":::\n",
    "\n",
    ":::{tip}\n",
    "The default output form of {func}`molsysmt.basic.convert` is the native `molsysmt.MolSys`.\n",
    ":::"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The molecular system was converted from the form \"string:pdb_id\" to \"string:aminoacids3\" passing through some intermediate forms: \"string:pdb_id\" $\\rightarrow$ \"molsysmt.MolSys\" $\\rightarrow$ \"string:pdb_text\" $\\rightarrow$ \"mdtraj.Trajectory\" $\\rightarrow$ \"nglview.NGLWidget\" $\\rightarrow$ \"openmm.Topology\" $\\rightarrow$ \"string:aminoacids3\". We can have a look to each form with the help of {func}\"molsysmt.basic.info\":"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_873b9\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_873b9_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_873b9_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_873b9_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_873b9_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_873b9_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_873b9_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_873b9_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_873b9_level0_col7\" class=\"col_heading level0 col7\" >n_waters</th>\n",
       "      <th id=\"T_873b9_level0_col8\" class=\"col_heading level0 col8\" >n_ions</th>\n",
       "      <th id=\"T_873b9_level0_col9\" class=\"col_heading level0 col9\" >n_small_molecules</th>\n",
       "      <th id=\"T_873b9_level0_col10\" class=\"col_heading level0 col10\" >n_proteins</th>\n",
       "      <th id=\"T_873b9_level0_col11\" class=\"col_heading level0 col11\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_873b9_row0_col0\" class=\"data row0 col0\" >nglview.NGLWidget</td>\n",
       "      <td id=\"T_873b9_row0_col1\" class=\"data row0 col1\" >1441</td>\n",
       "      <td id=\"T_873b9_row0_col2\" class=\"data row0 col2\" >302</td>\n",
       "      <td id=\"T_873b9_row0_col3\" class=\"data row0 col3\" >141</td>\n",
       "      <td id=\"T_873b9_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_873b9_row0_col5\" class=\"data row0 col5\" >141</td>\n",
       "      <td id=\"T_873b9_row0_col6\" class=\"data row0 col6\" >5</td>\n",
       "      <td id=\"T_873b9_row0_col7\" class=\"data row0 col7\" >136</td>\n",
       "      <td id=\"T_873b9_row0_col8\" class=\"data row0 col8\" >2</td>\n",
       "      <td id=\"T_873b9_row0_col9\" class=\"data row0 col9\" >2</td>\n",
       "      <td id=\"T_873b9_row0_col10\" class=\"data row0 col10\" >1</td>\n",
       "      <td id=\"T_873b9_row0_col11\" class=\"data row0 col11\" >1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f54916b9780>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system_F)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "####### REMOVING FILES ############################\n",
    "# This cell is removed with the tag: \"remove-input\"\n",
    "# As such, it will not be shown in documentation\n",
    "\n",
    "import os\n",
    "os.remove('181L.h5msm')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, the conversion can be done over the entiry system or over a part of it. The input argument `selection` works with most of the MolSysMT methods, and {func}`molsysmt.basic.convert()` is not an exception. Lets see how a simple selection operates on a conversion: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "benzene = msm.convert('181L', to_form='string:pdb_text', selection='molecule_name==\"BENZENE\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HEADER    MOLECULAR SYSTEM                        20-MAY-24       \n",
      "REMARK   1 Created by MolSysMT version 1.0 on 20-MAY-2024 at 14:26:35\n",
      "CRYST1   60.900   60.900   97.000  90.00  90.00 120.00\n",
      "ATOM   1300 C1   BNZ A 400      25.978   5.327   4.779  0.00  0.00           C\n",
      "ATOM   1301 C2   BNZ A 400      26.395   5.074   3.499  0.00  0.00           C\n",
      "ATOM   1302 C3   BNZ A 400      27.340   5.860   2.902  0.00  0.00           C\n",
      "ATOM   1303 C4   BNZ A 400      27.837   6.921   3.569  0.00  0.00           C\n",
      "ATOM   1304 C5   BNZ A 400      27.420   7.196   4.856  0.00  0.00           C\n",
      "ATOM   1305 C6   BNZ A 400      26.498   6.379   5.469  0.00  0.00           C\n",
      "END\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(benzene)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multiple items into one\n",
    "\n",
    ":::{hint}\n",
    "Visit the section [User guide > Introduction > Molecular System > Items](../../intro/molecular_systems/items.md) in case you are not familiar with the concept of \"item\" in MolSysMT.\n",
    ":::"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sometimes the molecular system comes from the combination of multiple items with different forms. For example, we can have two files with topology and coordinates to be converted into a single molecular item:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "from molsysmt import systems\n",
    "import molsysmt as msm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "prmtop_file = systems['pentalanine']['pentalanine.prmtop']\n",
    "inpcrd_file = systems['pentalanine']['pentalanine.inpcrd']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_d3105\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_d3105_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_d3105_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_d3105_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_d3105_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_d3105_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_d3105_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_d3105_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_d3105_level0_col7\" class=\"col_heading level0 col7\" >n_waters</th>\n",
       "      <th id=\"T_d3105_level0_col8\" class=\"col_heading level0 col8\" >n_peptides</th>\n",
       "      <th id=\"T_d3105_level0_col9\" class=\"col_heading level0 col9\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_d3105_row0_col0\" class=\"data row0 col0\" >file:prmtop</td>\n",
       "      <td id=\"T_d3105_row0_col1\" class=\"data row0 col1\" >5207</td>\n",
       "      <td id=\"T_d3105_row0_col2\" class=\"data row0 col2\" >1722</td>\n",
       "      <td id=\"T_d3105_row0_col3\" class=\"data row0 col3\" >1716</td>\n",
       "      <td id=\"T_d3105_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_d3105_row0_col5\" class=\"data row0 col5\" >1716</td>\n",
       "      <td id=\"T_d3105_row0_col6\" class=\"data row0 col6\" >2</td>\n",
       "      <td id=\"T_d3105_row0_col7\" class=\"data row0 col7\" >1715</td>\n",
       "      <td id=\"T_d3105_row0_col8\" class=\"data row0 col8\" >1</td>\n",
       "      <td id=\"T_d3105_row0_col9\" class=\"data row0 col9\" >None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548aba3fa0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(prmtop_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_3dc61\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_3dc61_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_3dc61_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_3dc61_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_3dc61_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_3dc61_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_3dc61_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_3dc61_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_3dc61_level0_col7\" class=\"col_heading level0 col7\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_3dc61_row0_col0\" class=\"data row0 col0\" >file:inpcrd</td>\n",
       "      <td id=\"T_3dc61_row0_col1\" class=\"data row0 col1\" >5207</td>\n",
       "      <td id=\"T_3dc61_row0_col2\" class=\"data row0 col2\" >None</td>\n",
       "      <td id=\"T_3dc61_row0_col3\" class=\"data row0 col3\" >None</td>\n",
       "      <td id=\"T_3dc61_row0_col4\" class=\"data row0 col4\" >None</td>\n",
       "      <td id=\"T_3dc61_row0_col5\" class=\"data row0 col5\" >None</td>\n",
       "      <td id=\"T_3dc61_row0_col6\" class=\"data row0 col6\" >None</td>\n",
       "      <td id=\"T_3dc61_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548addc610>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(inpcrd_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert([prmtop_file, inpcrd_file], to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_ba9e2\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_ba9e2_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_ba9e2_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_ba9e2_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_ba9e2_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_ba9e2_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_ba9e2_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_ba9e2_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_ba9e2_level0_col7\" class=\"col_heading level0 col7\" >n_waters</th>\n",
       "      <th id=\"T_ba9e2_level0_col8\" class=\"col_heading level0 col8\" >n_peptides</th>\n",
       "      <th id=\"T_ba9e2_level0_col9\" class=\"col_heading level0 col9\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_ba9e2_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "      <td id=\"T_ba9e2_row0_col1\" class=\"data row0 col1\" >5207</td>\n",
       "      <td id=\"T_ba9e2_row0_col2\" class=\"data row0 col2\" >1722</td>\n",
       "      <td id=\"T_ba9e2_row0_col3\" class=\"data row0 col3\" >1716</td>\n",
       "      <td id=\"T_ba9e2_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_ba9e2_row0_col5\" class=\"data row0 col5\" >1716</td>\n",
       "      <td id=\"T_ba9e2_row0_col6\" class=\"data row0 col6\" >2</td>\n",
       "      <td id=\"T_ba9e2_row0_col7\" class=\"data row0 col7\" >1715</td>\n",
       "      <td id=\"T_ba9e2_row0_col8\" class=\"data row0 col8\" >1</td>\n",
       "      <td id=\"T_ba9e2_row0_col9\" class=\"data row0 col9\" >1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548a37a590>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## An item into multiple ones\n",
    "\n",
    ":::{hint}\n",
    "Visit the section [User guide > Introduction > Molecular System > Items](../../intro/molecular_systems/items.md) in case you are not familiar with the concept of \"item\" in MolSysMT.\n",
    ":::"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The way to convert multiple items into one was illustrated in the previous section. Let's see now how to produce more than a single item with different forms just in one line:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "h5_file = systems['pentalanine']['traj_pentalanine.h5']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "topology, structures = msm.convert(h5_file, to_form=['molsysmt.Topology','molsysmt.Structures'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_72d2f\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_72d2f_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_72d2f_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_72d2f_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_72d2f_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_72d2f_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_72d2f_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_72d2f_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_72d2f_level0_col7\" class=\"col_heading level0 col7\" >n_peptides</th>\n",
       "      <th id=\"T_72d2f_level0_col8\" class=\"col_heading level0 col8\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_72d2f_row0_col0\" class=\"data row0 col0\" >molsysmt.Topology</td>\n",
       "      <td id=\"T_72d2f_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "      <td id=\"T_72d2f_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "      <td id=\"T_72d2f_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "      <td id=\"T_72d2f_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_72d2f_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "      <td id=\"T_72d2f_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "      <td id=\"T_72d2f_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "      <td id=\"T_72d2f_row0_col8\" class=\"data row0 col8\" >None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548ab98d30>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(topology)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_1ef56\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_1ef56_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_1ef56_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_1ef56_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_1ef56_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_1ef56_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_1ef56_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_1ef56_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_1ef56_level0_col7\" class=\"col_heading level0 col7\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_1ef56_row0_col0\" class=\"data row0 col0\" >molsysmt.Structures</td>\n",
       "      <td id=\"T_1ef56_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "      <td id=\"T_1ef56_row0_col2\" class=\"data row0 col2\" >None</td>\n",
       "      <td id=\"T_1ef56_row0_col3\" class=\"data row0 col3\" >None</td>\n",
       "      <td id=\"T_1ef56_row0_col4\" class=\"data row0 col4\" >None</td>\n",
       "      <td id=\"T_1ef56_row0_col5\" class=\"data row0 col5\" >None</td>\n",
       "      <td id=\"T_1ef56_row0_col6\" class=\"data row0 col6\" >None</td>\n",
       "      <td id=\"T_1ef56_row0_col7\" class=\"data row0 col7\" >5000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548a3a71f0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(structures)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_38b26\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_38b26_level0_col0\" class=\"col_heading level0 col0\" >form</th>\n",
       "      <th id=\"T_38b26_level0_col1\" class=\"col_heading level0 col1\" >n_atoms</th>\n",
       "      <th id=\"T_38b26_level0_col2\" class=\"col_heading level0 col2\" >n_groups</th>\n",
       "      <th id=\"T_38b26_level0_col3\" class=\"col_heading level0 col3\" >n_components</th>\n",
       "      <th id=\"T_38b26_level0_col4\" class=\"col_heading level0 col4\" >n_chains</th>\n",
       "      <th id=\"T_38b26_level0_col5\" class=\"col_heading level0 col5\" >n_molecules</th>\n",
       "      <th id=\"T_38b26_level0_col6\" class=\"col_heading level0 col6\" >n_entities</th>\n",
       "      <th id=\"T_38b26_level0_col7\" class=\"col_heading level0 col7\" >n_peptides</th>\n",
       "      <th id=\"T_38b26_level0_col8\" class=\"col_heading level0 col8\" >n_structures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_38b26_row0_col0\" class=\"data row0 col0\" >['molsysmt.Topology', 'molsysmt.Structures']</td>\n",
       "      <td id=\"T_38b26_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "      <td id=\"T_38b26_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "      <td id=\"T_38b26_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "      <td id=\"T_38b26_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_38b26_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "      <td id=\"T_38b26_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "      <td id=\"T_38b26_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "      <td id=\"T_38b26_row0_col8\" class=\"data row0 col8\" >5000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548a3a7a60>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info([topology, structures])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets now visualize the combination of both forms to double check that they were properly converted:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# This cell is removed with the tag: \"remove-input\"\n",
    "# As such, it will not be shown in documentation\n",
    "\n",
    "nglview_htmlfile = '../../../../_static/nglview/pentalanine.html'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bff8dde1954146eca16ffa03dfb41612",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "NGLWidget()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "view = msm.view([topology, structures], structure_indices=3500, standard=True, viewer='NGLView')\n",
    "view"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "editable": true,
    "slideshow": {
     "slide_type": ""
    },
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# This cell is removed with the tag: \"remove-input\"\n",
    "# As such, it will not be shown in documentation\n",
    "\n",
    "if False:\n",
    "    # to write an html the view had to be displayed in a cell before\n",
    "    msm.thirds.nglview.write_html(view, nglview_htmlfile)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Supported conversions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_c0b87_row0_col0, #T_c0b87_row0_col1 {\n",
       "  background-color: #C2CFB2;\n",
       "  text-align: center;\n",
       "}\n",
       "#T_c0b87_row0_col2, #T_c0b87_row0_col3 {\n",
       "  background-color: #E2856E;\n",
       "  text-align: center;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_c0b87\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_c0b87_level0_col0\" class=\"col_heading level0 col0\" >string:amino_acids_1</th>\n",
       "      <th id=\"T_c0b87_level0_col1\" class=\"col_heading level0 col1\" >string:amino_acids_3</th>\n",
       "      <th id=\"T_c0b87_level0_col2\" class=\"col_heading level0 col2\" >string:pdb_id</th>\n",
       "      <th id=\"T_c0b87_level0_col3\" class=\"col_heading level0 col3\" >string:pdb_text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_c0b87_level0_row0\" class=\"row_heading level0 row0\" >mdtraj.Trajectory</th>\n",
       "      <td id=\"T_c0b87_row0_col0\" class=\"data row0 col0\" >True</td>\n",
       "      <td id=\"T_c0b87_row0_col1\" class=\"data row0 col1\" >True</td>\n",
       "      <td id=\"T_c0b87_row0_col2\" class=\"data row0 col2\" >False</td>\n",
       "      <td id=\"T_c0b87_row0_col3\" class=\"data row0 col3\" >False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548ac95ab0>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.supported.conversions(from_form='mdtraj.Trajectory', to_form_type='string')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_1396f_row0_col0, #T_1396f_row1_col0, #T_1396f_row2_col0, #T_1396f_row3_col0, #T_1396f_row4_col0, #T_1396f_row5_col0, #T_1396f_row6_col0, #T_1396f_row7_col0, #T_1396f_row8_col0, #T_1396f_row9_col0, #T_1396f_row10_col0, #T_1396f_row11_col0, #T_1396f_row13_col0, #T_1396f_row14_col0, #T_1396f_row15_col0, #T_1396f_row17_col0 {\n",
       "  background-color: #E2856E;\n",
       "  text-align: center;\n",
       "}\n",
       "#T_1396f_row12_col0, #T_1396f_row16_col0 {\n",
       "  background-color: #C2CFB2;\n",
       "  text-align: center;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_1396f\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_1396f_level0_col0\" class=\"col_heading level0 col0\" >mdtraj.Trajectory</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row0\" class=\"row_heading level0 row0\" >file:bcif</th>\n",
       "      <td id=\"T_1396f_row0_col0\" class=\"data row0 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row1\" class=\"row_heading level0 row1\" >file:bcif.gz</th>\n",
       "      <td id=\"T_1396f_row1_col0\" class=\"data row1 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row2\" class=\"row_heading level0 row2\" >file:cif</th>\n",
       "      <td id=\"T_1396f_row2_col0\" class=\"data row2 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row3\" class=\"row_heading level0 row3\" >file:crd</th>\n",
       "      <td id=\"T_1396f_row3_col0\" class=\"data row3 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row4\" class=\"row_heading level0 row4\" >file:dcd</th>\n",
       "      <td id=\"T_1396f_row4_col0\" class=\"data row4 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row5\" class=\"row_heading level0 row5\" >file:gro</th>\n",
       "      <td id=\"T_1396f_row5_col0\" class=\"data row5 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row6\" class=\"row_heading level0 row6\" >file:h5</th>\n",
       "      <td id=\"T_1396f_row6_col0\" class=\"data row6 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row7\" class=\"row_heading level0 row7\" >file:h5msm</th>\n",
       "      <td id=\"T_1396f_row7_col0\" class=\"data row7 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row8\" class=\"row_heading level0 row8\" >file:inpcrd</th>\n",
       "      <td id=\"T_1396f_row8_col0\" class=\"data row8 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row9\" class=\"row_heading level0 row9\" >file:mmtf</th>\n",
       "      <td id=\"T_1396f_row9_col0\" class=\"data row9 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row10\" class=\"row_heading level0 row10\" >file:mol2</th>\n",
       "      <td id=\"T_1396f_row10_col0\" class=\"data row10 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row11\" class=\"row_heading level0 row11\" >file:msmpk</th>\n",
       "      <td id=\"T_1396f_row11_col0\" class=\"data row11 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row12\" class=\"row_heading level0 row12\" >file:pdb</th>\n",
       "      <td id=\"T_1396f_row12_col0\" class=\"data row12 col0\" >True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row13\" class=\"row_heading level0 row13\" >file:prmtop</th>\n",
       "      <td id=\"T_1396f_row13_col0\" class=\"data row13 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row14\" class=\"row_heading level0 row14\" >file:psf</th>\n",
       "      <td id=\"T_1396f_row14_col0\" class=\"data row14 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row15\" class=\"row_heading level0 row15\" >file:trjpk</th>\n",
       "      <td id=\"T_1396f_row15_col0\" class=\"data row15 col0\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row16\" class=\"row_heading level0 row16\" >file:xtc</th>\n",
       "      <td id=\"T_1396f_row16_col0\" class=\"data row16 col0\" >True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_1396f_level0_row17\" class=\"row_heading level0 row17\" >file:xyznpy</th>\n",
       "      <td id=\"T_1396f_row17_col0\" class=\"data row17 col0\" >False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548ac97070>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.supported.conversions(from_form='mdtraj.Trajectory', to_form_type='file', as_rows='to')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_66ab6_row0_col0, #T_66ab6_row1_col0 {\n",
       "  background-color: #C2CFB2;\n",
       "  text-align: center;\n",
       "}\n",
       "#T_66ab6_row0_col1, #T_66ab6_row1_col1 {\n",
       "  background-color: #E2856E;\n",
       "  text-align: center;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_66ab6\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_66ab6_level0_col0\" class=\"col_heading level0 col0\" >mdtraj.Trajectory</th>\n",
       "      <th id=\"T_66ab6_level0_col1\" class=\"col_heading level0 col1\" >openmm.Topology</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_66ab6_level0_row0\" class=\"row_heading level0 row0\" >pytraj.Trajectory</th>\n",
       "      <td id=\"T_66ab6_row0_col0\" class=\"data row0 col0\" >True</td>\n",
       "      <td id=\"T_66ab6_row0_col1\" class=\"data row0 col1\" >False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_66ab6_level0_row1\" class=\"row_heading level0 row1\" >MDAnalysis.Universe</th>\n",
       "      <td id=\"T_66ab6_row1_col0\" class=\"data row1 col0\" >True</td>\n",
       "      <td id=\"T_66ab6_row1_col1\" class=\"data row1 col1\" >False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f548ab000a0>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from_list=['pytraj.Trajectory','MDAnalysis.Universe']\n",
    "to_list=['mdtraj.Trajectory', 'openmm.Topology']\n",
    "msm.supported.conversions(from_form=from_list, to_form=to_list, as_rows='from')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ":::{seealso}\n",
    "[User guide > Introduction > Molecular System > Items](../../intro/molecular_systems/items.md):    \n",
    "[User guide > Introduction > Molecular System > Forms](../../intro/molecular_systems/forms.md):    \n",
    "[User guide > Introduction > Supported](../../intro/supported.md):    \n",
    "[User guide > Introduction > Demo systems](../../intro/demo_systems.ipynb):\n",
    "[User guide > Tools > Basic > Selection](selection.ipynb): Printing out summary information of a molecular system.    \n",
    "[User guide > Tools > Basic > Info](info.ipynb): Printing out summary information of a molecular system.    \n",
    "[User guide > Tools > Basic > View](view.ipynb): Showing a molecular system.    \n",
    ":::"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
