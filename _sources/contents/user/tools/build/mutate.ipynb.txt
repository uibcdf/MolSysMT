{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cd919e74-55b6-4db6-98ec-27de6a4eecf2",
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# This cell is removed with the tag: \"remove-input\"\n",
    "# As such, it will not be shown in documentation\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "nglview_static_dir = '../../../../_static/nglview/user/tools/build/mutate/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "56b1dd6d-6f0d-4ed8-aa6e-c83c706a712b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ba65f718c72d471dbf883c0d7088f3e0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f281984a-077c-4412-8abe-1477a8f39816",
   "metadata": {},
   "source": [
    "(UserGuide_Tools_Build_BuildPeptide)=\n",
    "# Mutate\n",
    "*Mutate aminoacids in peptide or protein.*\n",
    "\n",
    "With the function {func}`molsysmt.build.mutate`, specific aminoacids of a peptide or a protein can be mutated. Let's first of all build a short peptide to test how this function works."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1913a566-360c-42b5-921d-a082e1f92308",
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.build.build_peptide('TyrGlyGlyPheMet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "06c7bc29-7d3d-45d3-beaa-f005e4f26489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_caec2\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_caec2_level0_col0\" class=\"col_heading level0 col0\" >index</th>\n",
       "      <th id=\"T_caec2_level0_col1\" class=\"col_heading level0 col1\" >id</th>\n",
       "      <th id=\"T_caec2_level0_col2\" class=\"col_heading level0 col2\" >name</th>\n",
       "      <th id=\"T_caec2_level0_col3\" class=\"col_heading level0 col3\" >type</th>\n",
       "      <th id=\"T_caec2_level0_col4\" class=\"col_heading level0 col4\" >n atoms</th>\n",
       "      <th id=\"T_caec2_level0_col5\" class=\"col_heading level0 col5\" >component index</th>\n",
       "      <th id=\"T_caec2_level0_col6\" class=\"col_heading level0 col6\" >chain index</th>\n",
       "      <th id=\"T_caec2_level0_col7\" class=\"col_heading level0 col7\" >molecule index</th>\n",
       "      <th id=\"T_caec2_level0_col8\" class=\"col_heading level0 col8\" >molecule type</th>\n",
       "      <th id=\"T_caec2_level0_col9\" class=\"col_heading level0 col9\" >entity index</th>\n",
       "      <th id=\"T_caec2_level0_col10\" class=\"col_heading level0 col10\" >entity name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_caec2_row0_col0\" class=\"data row0 col0\" >0</td>\n",
       "      <td id=\"T_caec2_row0_col1\" class=\"data row0 col1\" >1</td>\n",
       "      <td id=\"T_caec2_row0_col2\" class=\"data row0 col2\" >TYR</td>\n",
       "      <td id=\"T_caec2_row0_col3\" class=\"data row0 col3\" >amino acid</td>\n",
       "      <td id=\"T_caec2_row0_col4\" class=\"data row0 col4\" >21</td>\n",
       "      <td id=\"T_caec2_row0_col5\" class=\"data row0 col5\" >0</td>\n",
       "      <td id=\"T_caec2_row0_col6\" class=\"data row0 col6\" >0</td>\n",
       "      <td id=\"T_caec2_row0_col7\" class=\"data row0 col7\" >0</td>\n",
       "      <td id=\"T_caec2_row0_col8\" class=\"data row0 col8\" >peptide</td>\n",
       "      <td id=\"T_caec2_row0_col9\" class=\"data row0 col9\" >0</td>\n",
       "      <td id=\"T_caec2_row0_col10\" class=\"data row0 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_caec2_row1_col0\" class=\"data row1 col0\" >1</td>\n",
       "      <td id=\"T_caec2_row1_col1\" class=\"data row1 col1\" >2</td>\n",
       "      <td id=\"T_caec2_row1_col2\" class=\"data row1 col2\" >GLY</td>\n",
       "      <td id=\"T_caec2_row1_col3\" class=\"data row1 col3\" >amino acid</td>\n",
       "      <td id=\"T_caec2_row1_col4\" class=\"data row1 col4\" >7</td>\n",
       "      <td id=\"T_caec2_row1_col5\" class=\"data row1 col5\" >0</td>\n",
       "      <td id=\"T_caec2_row1_col6\" class=\"data row1 col6\" >0</td>\n",
       "      <td id=\"T_caec2_row1_col7\" class=\"data row1 col7\" >0</td>\n",
       "      <td id=\"T_caec2_row1_col8\" class=\"data row1 col8\" >peptide</td>\n",
       "      <td id=\"T_caec2_row1_col9\" class=\"data row1 col9\" >0</td>\n",
       "      <td id=\"T_caec2_row1_col10\" class=\"data row1 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_caec2_row2_col0\" class=\"data row2 col0\" >2</td>\n",
       "      <td id=\"T_caec2_row2_col1\" class=\"data row2 col1\" >3</td>\n",
       "      <td id=\"T_caec2_row2_col2\" class=\"data row2 col2\" >GLY</td>\n",
       "      <td id=\"T_caec2_row2_col3\" class=\"data row2 col3\" >amino acid</td>\n",
       "      <td id=\"T_caec2_row2_col4\" class=\"data row2 col4\" >7</td>\n",
       "      <td id=\"T_caec2_row2_col5\" class=\"data row2 col5\" >0</td>\n",
       "      <td id=\"T_caec2_row2_col6\" class=\"data row2 col6\" >0</td>\n",
       "      <td id=\"T_caec2_row2_col7\" class=\"data row2 col7\" >0</td>\n",
       "      <td id=\"T_caec2_row2_col8\" class=\"data row2 col8\" >peptide</td>\n",
       "      <td id=\"T_caec2_row2_col9\" class=\"data row2 col9\" >0</td>\n",
       "      <td id=\"T_caec2_row2_col10\" class=\"data row2 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_caec2_row3_col0\" class=\"data row3 col0\" >3</td>\n",
       "      <td id=\"T_caec2_row3_col1\" class=\"data row3 col1\" >4</td>\n",
       "      <td id=\"T_caec2_row3_col2\" class=\"data row3 col2\" >PHE</td>\n",
       "      <td id=\"T_caec2_row3_col3\" class=\"data row3 col3\" >amino acid</td>\n",
       "      <td id=\"T_caec2_row3_col4\" class=\"data row3 col4\" >20</td>\n",
       "      <td id=\"T_caec2_row3_col5\" class=\"data row3 col5\" >0</td>\n",
       "      <td id=\"T_caec2_row3_col6\" class=\"data row3 col6\" >0</td>\n",
       "      <td id=\"T_caec2_row3_col7\" class=\"data row3 col7\" >0</td>\n",
       "      <td id=\"T_caec2_row3_col8\" class=\"data row3 col8\" >peptide</td>\n",
       "      <td id=\"T_caec2_row3_col9\" class=\"data row3 col9\" >0</td>\n",
       "      <td id=\"T_caec2_row3_col10\" class=\"data row3 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_caec2_row4_col0\" class=\"data row4 col0\" >4</td>\n",
       "      <td id=\"T_caec2_row4_col1\" class=\"data row4 col1\" >5</td>\n",
       "      <td id=\"T_caec2_row4_col2\" class=\"data row4 col2\" >MET</td>\n",
       "      <td id=\"T_caec2_row4_col3\" class=\"data row4 col3\" >amino acid</td>\n",
       "      <td id=\"T_caec2_row4_col4\" class=\"data row4 col4\" >17</td>\n",
       "      <td id=\"T_caec2_row4_col5\" class=\"data row4 col5\" >0</td>\n",
       "      <td id=\"T_caec2_row4_col6\" class=\"data row4 col6\" >0</td>\n",
       "      <td id=\"T_caec2_row4_col7\" class=\"data row4 col7\" >0</td>\n",
       "      <td id=\"T_caec2_row4_col8\" class=\"data row4 col8\" >peptide</td>\n",
       "      <td id=\"T_caec2_row4_col9\" class=\"data row4 col9\" >0</td>\n",
       "      <td id=\"T_caec2_row4_col10\" class=\"data row4 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f713d615780>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system, element='group')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e894f6ad-c7ec-4bd5-95e1-efb5f9f85b9c",
   "metadata": {},
   "source": [
    "Let's now explore the different ways the function {func}`molsysmt.build.mutate` can be used. The input argument `mutations` accepts strings or lists of strings if the mutations are specified in the tradicional way: \"old_residue_name-residue_id-new_residue_name\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "862b9393-5282-44f8-9345-7ad390850f4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_molecular_system = msm.build.mutate(molecular_system, mutations=[\"GLY-2-ALA\", \"GLY-3-LYS\"], engine='PDBFixer')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e80014fe-011c-42f2-9fc6-c2383025ac14",
   "metadata": {},
   "source": [
    "```{admonition} Note\n",
    ":class: node\n",
    "In the current version of MolSysMT, the function `molsysmt.build.mutate` works with the library [PDBFixer](https://github.com/openmm/pdbfixer) behind doing the dirty job. There is no native algorithm to mutate aminoacids yet. So... do not forget to give credit to the [PDBFixer](https://github.com/openmm/pdbfixer) developers if you are using this function.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "71fbb2e9-94ee-40ec-b162-fc4cbc1de7b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_0577d\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_0577d_level0_col0\" class=\"col_heading level0 col0\" >index</th>\n",
       "      <th id=\"T_0577d_level0_col1\" class=\"col_heading level0 col1\" >id</th>\n",
       "      <th id=\"T_0577d_level0_col2\" class=\"col_heading level0 col2\" >name</th>\n",
       "      <th id=\"T_0577d_level0_col3\" class=\"col_heading level0 col3\" >type</th>\n",
       "      <th id=\"T_0577d_level0_col4\" class=\"col_heading level0 col4\" >n atoms</th>\n",
       "      <th id=\"T_0577d_level0_col5\" class=\"col_heading level0 col5\" >component index</th>\n",
       "      <th id=\"T_0577d_level0_col6\" class=\"col_heading level0 col6\" >chain index</th>\n",
       "      <th id=\"T_0577d_level0_col7\" class=\"col_heading level0 col7\" >molecule index</th>\n",
       "      <th id=\"T_0577d_level0_col8\" class=\"col_heading level0 col8\" >molecule type</th>\n",
       "      <th id=\"T_0577d_level0_col9\" class=\"col_heading level0 col9\" >entity index</th>\n",
       "      <th id=\"T_0577d_level0_col10\" class=\"col_heading level0 col10\" >entity name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_0577d_row0_col0\" class=\"data row0 col0\" >0</td>\n",
       "      <td id=\"T_0577d_row0_col1\" class=\"data row0 col1\" >1</td>\n",
       "      <td id=\"T_0577d_row0_col2\" class=\"data row0 col2\" >TYR</td>\n",
       "      <td id=\"T_0577d_row0_col3\" class=\"data row0 col3\" >amino acid</td>\n",
       "      <td id=\"T_0577d_row0_col4\" class=\"data row0 col4\" >23</td>\n",
       "      <td id=\"T_0577d_row0_col5\" class=\"data row0 col5\" >0</td>\n",
       "      <td id=\"T_0577d_row0_col6\" class=\"data row0 col6\" >0</td>\n",
       "      <td id=\"T_0577d_row0_col7\" class=\"data row0 col7\" >0</td>\n",
       "      <td id=\"T_0577d_row0_col8\" class=\"data row0 col8\" >peptide</td>\n",
       "      <td id=\"T_0577d_row0_col9\" class=\"data row0 col9\" >0</td>\n",
       "      <td id=\"T_0577d_row0_col10\" class=\"data row0 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_0577d_row1_col0\" class=\"data row1 col0\" >1</td>\n",
       "      <td id=\"T_0577d_row1_col1\" class=\"data row1 col1\" >2</td>\n",
       "      <td id=\"T_0577d_row1_col2\" class=\"data row1 col2\" >ALA</td>\n",
       "      <td id=\"T_0577d_row1_col3\" class=\"data row1 col3\" >amino acid</td>\n",
       "      <td id=\"T_0577d_row1_col4\" class=\"data row1 col4\" >10</td>\n",
       "      <td id=\"T_0577d_row1_col5\" class=\"data row1 col5\" >0</td>\n",
       "      <td id=\"T_0577d_row1_col6\" class=\"data row1 col6\" >0</td>\n",
       "      <td id=\"T_0577d_row1_col7\" class=\"data row1 col7\" >0</td>\n",
       "      <td id=\"T_0577d_row1_col8\" class=\"data row1 col8\" >peptide</td>\n",
       "      <td id=\"T_0577d_row1_col9\" class=\"data row1 col9\" >0</td>\n",
       "      <td id=\"T_0577d_row1_col10\" class=\"data row1 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_0577d_row2_col0\" class=\"data row2 col0\" >2</td>\n",
       "      <td id=\"T_0577d_row2_col1\" class=\"data row2 col1\" >3</td>\n",
       "      <td id=\"T_0577d_row2_col2\" class=\"data row2 col2\" >LYS</td>\n",
       "      <td id=\"T_0577d_row2_col3\" class=\"data row2 col3\" >amino acid</td>\n",
       "      <td id=\"T_0577d_row2_col4\" class=\"data row2 col4\" >22</td>\n",
       "      <td id=\"T_0577d_row2_col5\" class=\"data row2 col5\" >0</td>\n",
       "      <td id=\"T_0577d_row2_col6\" class=\"data row2 col6\" >0</td>\n",
       "      <td id=\"T_0577d_row2_col7\" class=\"data row2 col7\" >0</td>\n",
       "      <td id=\"T_0577d_row2_col8\" class=\"data row2 col8\" >peptide</td>\n",
       "      <td id=\"T_0577d_row2_col9\" class=\"data row2 col9\" >0</td>\n",
       "      <td id=\"T_0577d_row2_col10\" class=\"data row2 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_0577d_row3_col0\" class=\"data row3 col0\" >3</td>\n",
       "      <td id=\"T_0577d_row3_col1\" class=\"data row3 col1\" >4</td>\n",
       "      <td id=\"T_0577d_row3_col2\" class=\"data row3 col2\" >PHE</td>\n",
       "      <td id=\"T_0577d_row3_col3\" class=\"data row3 col3\" >amino acid</td>\n",
       "      <td id=\"T_0577d_row3_col4\" class=\"data row3 col4\" >20</td>\n",
       "      <td id=\"T_0577d_row3_col5\" class=\"data row3 col5\" >0</td>\n",
       "      <td id=\"T_0577d_row3_col6\" class=\"data row3 col6\" >0</td>\n",
       "      <td id=\"T_0577d_row3_col7\" class=\"data row3 col7\" >0</td>\n",
       "      <td id=\"T_0577d_row3_col8\" class=\"data row3 col8\" >peptide</td>\n",
       "      <td id=\"T_0577d_row3_col9\" class=\"data row3 col9\" >0</td>\n",
       "      <td id=\"T_0577d_row3_col10\" class=\"data row3 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_0577d_row4_col0\" class=\"data row4 col0\" >4</td>\n",
       "      <td id=\"T_0577d_row4_col1\" class=\"data row4 col1\" >5</td>\n",
       "      <td id=\"T_0577d_row4_col2\" class=\"data row4 col2\" >MET</td>\n",
       "      <td id=\"T_0577d_row4_col3\" class=\"data row4 col3\" >amino acid</td>\n",
       "      <td id=\"T_0577d_row4_col4\" class=\"data row4 col4\" >18</td>\n",
       "      <td id=\"T_0577d_row4_col5\" class=\"data row4 col5\" >0</td>\n",
       "      <td id=\"T_0577d_row4_col6\" class=\"data row4 col6\" >0</td>\n",
       "      <td id=\"T_0577d_row4_col7\" class=\"data row4 col7\" >0</td>\n",
       "      <td id=\"T_0577d_row4_col8\" class=\"data row4 col8\" >peptide</td>\n",
       "      <td id=\"T_0577d_row4_col9\" class=\"data row4 col9\" >0</td>\n",
       "      <td id=\"T_0577d_row4_col10\" class=\"data row4 col10\" >peptide 0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f70ba524640>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(new_molecular_system, element='group')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37c99e8a-86a6-467a-ac5c-cd455a7eaa0a",
   "metadata": {},
   "source": [
    "In addition to a string or a list of strings, the input argument `mutations` accepts a dictionary where the keys can be the indices, ids or names of the residues to be mutated, and the corresponding values must be the new residue names. Let's see some examples:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3dd0c5ec-c411-4a09-ba23-cdf60790a4a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'TyrAlaLysPheMet'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_molecular_system = msm.build.mutate(molecular_system, mutations={1:'ALA', 2:'LYS'}, keys='group_index')\n",
    "\n",
    "msm.convert(new_molecular_system, to_form='string:amino_acids_3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "28910ada-4efc-4a6c-9a72-e6c4b4237bf6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['TYR', 'VAL', 'THR', 'PHE', 'MET']"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_molecular_system = msm.build.mutate(molecular_system, mutations={2:'VAL', 3:'THR'}, keys='group_id')\n",
    "\n",
    "msm.get(new_molecular_system, element='group', group_name=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f847636f-6842-40a3-b410-cfb2ba0c8497",
   "metadata": {},
   "source": [
    "Finally, the {func}`molsysmt.build.mutate` includes an option to select the region of the system where the mutations applies:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bcce18cd-5ffc-49e2-8c70-fb8ddfdf5557",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 TYR\n",
      "2 GLY\n",
      "3 ALA\n",
      "4 PHE\n",
      "5 MET\n"
     ]
    }
   ],
   "source": [
    "new_molecular_system = msm.build.mutate(molecular_system, mutations={'GLY':'ALA'}, keys='group_name', selection='group_id==[3,4,5]')\n",
    "\n",
    "for group_id, group_name in msm.Iterator(new_molecular_system, element='group', group_id=True, group_name=True):\n",
    "    print(group_id, group_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d835758b-a3c9-44b0-b71f-c22d21989c20",
   "metadata": {},
   "source": [
    "```{admonition} See also\n",
    ":class: attention\n",
    "{func}`molsysmt.build.build_peptide`, {func}`molsysmt.basic.info`, {func}`molsysmt.basic.convert`, {func}`molsysmt.basic.get`, {func}`molsysmt.basic.Iterator`, {func}`molsysmt.build.build_peptide`. \n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
